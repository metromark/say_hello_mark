name: New Production Workflow
on:
  push:
    branches:
      production
      # tags:
      #   - 'v*'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs: 
  pypi-external:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:  # downloading the build. Do the same step in npm build
      # - name: Retrieve release distributions
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: py-release-dists
      #     path: py-api/dist

      # - name: Retrieve release distributions
      #   env:
      #     GH_TOKEN: ${{ github.GITHUB_TOKEN }}
      #   run: | # gh run download RUN_ID --name ARTIFACT_NAME
      #     gh run download 1228424694 --name py-release-dists  

      - name: Download repoA artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ github.token }}
          # repo: metromark/say_hello_mark
          name: py-release-dists
          workflow: staging_deployment.yml
          path: py-api/dist
          # check_artifacts: true
          search_artifacts: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::208761073495:role/OneByZeroGithubActions
          aws-region: ap-southeast-1

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: py-api/dist

  publish-external-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Publish to external repo
        working-directory: ts-api
        run: |
          npm ci
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

        